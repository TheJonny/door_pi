- hosts: all
  gather_facts: false
  remote_user: root
  tasks:
    - name: ensure rw root
      ansible.posix.mount:
        path: /
        opts: rw,defaults,noatime
        state: remounted
    - name: ensure rw boot
      ansible.posix.mount:
        path: /boot
        opts: rw,defaults,flush
        state: remounted
    - name: check if wifi/bt disabled
      ansible.builtin.lineinfile:
        state: absent
        path: /boot/config.txt
        regexp: '^dtoverlay=disable-wifi'
      check_mode: true
      changed_when: false
      register: check
    - name: disable wifi/bt
      ansible.builtin.lineinfile:
        path: /boot/config.txt
        insertbefore: BOF
        line: "dtoverlay=disable-wifi\ndtoverlay=disable-bt"
      when: check.found == 0
    - name: update packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: full
    - name: install network manager
      ansible.builtin.apt:
        name: network-manager
        state: present
    - name: enable network manager
      ansible.builtin.systemd:
        name: NetworkManager
        enabled: yes
        state: started
    - name: link resolv.conf to run
      ansible.builtin.file:
        src: /run/NetworkManager/resolv.conf
        dest: /etc/resolv.conf
        owner: root
        group: root
        state: link
        force: yes
    - name: configure linux cmdline
      ansible.builtin.replace:
        path: /boot/cmdline.txt
        regexp: '(\s+)(?:ro\s+)?rootfstype=ext4(.*)$'
        replace: '\1ro rootfstype=ext4\2'
    - name: configure boot partition in fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^(.*\s+\/boot\s+.*vfat\s+)(?:ro,)?defaults(.*)$'
        replace: '\1ro,defaults\2'
    - name: configure root partition in fstab
      ansible.builtin.replace:
        path: /etc/fstab
        regexp: '^(.*\s+\/\s+.*ext4\s+)(?:ro,)?defaults(.*)$'
        replace: '\1ro,defaults\2'
    - name: configure tmpfs on /var/lib/systemd
      ansible.posix.mount:
        src: tmpfs
        path: /var/lib/systemd
        fstype: tmpfs
        opts: mode=0755
        state: present
    - name: configure tmpfs on /var/lib/private
      ansible.posix.mount:
        src: tmpfs
        path: /var/lib/private
        fstype: tmpfs
        opts: mode=0700
        state: present
    - name: configure tmpfs on /var/log
      ansible.posix.mount:
        src: tmpfs
        path: /var/log
        fstype: tmpfs
        opts: nodev,nosuid
        state: present
    - name: configure tmpfs on /var/tmp
      ansible.posix.mount:
        src: tmpfs
        path: /var/tmp
        fstype: tmpfs
        opts: nodev,nosuid
        state: present
    - name: configure tmpfs on /var/cache
      ansible.posix.mount:
        src: tmpfs
        path: /var/cache
        fstype: tmpfs
        opts: nodev,nosuid
        state: present
    - name: configure tmpfs on /tmp
      ansible.posix.mount:
        src: tmpfs
        path: /tmp
        fstype: tmpfs
        opts: nodev,nosuid,mode=1777
        state: present
    - name: disable swap
      ansible.builtin.systemd:
        name: dphys-swapfile
        enabled: no
    - name: add shell highlighting to pi's bashrc
      ansible.builtin.blockinfile:
        path: /home/pi/.bashrc
        block: |
          export LS_OPTIONS='--color=auto'
          eval "`dircolors`"
          alias ls='ls $LS_OPTIONS'
          alias ll='ls $LS_OPTIONS -la'
          alias l='ls $LS_OPTIONS'
          set_bash_prompt() {
            fs_mode=$(mount | sed -n -e "s/^\/dev\/.* on \/ .*(\(r[w|o]\).*/\1/p")
            PS1='\[\033[01;32m\]\u@\h${fs_mode:+($fs_mode)}\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
            }
          alias ro='sudo mount -o remount,ro / ; sudo mount -o remount,ro /boot'
          alias rw='sudo mount -o remount,rw / ; sudo mount -o remount,rw /boot'
          PROMPT_COMMAND=set_bash_prompt
    - name: add shell highlighting to root's bashrc
      ansible.builtin.blockinfile:
        path: /root/.bashrc
        block: |
          export LS_OPTIONS='--color=auto'
          eval "`dircolors`"
          alias ls='ls $LS_OPTIONS'
          alias ll='ls $LS_OPTIONS -la'
          alias l='ls $LS_OPTIONS'
          set_bash_prompt() {
            fs_mode=$(mount | sed -n -e "s/^\/dev\/.* on \/ .*(\(r[w|o]\).*/\1/p")
            PS1='\[\033[01;31m\]\u@\h${fs_mode:+($fs_mode)}\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
            }
          alias ro='sudo mount -o remount,ro / ; sudo mount -o remount,ro /boot'
          alias rw='sudo mount -o remount,rw / ; sudo mount -o remount,rw /boot'
          PROMPT_COMMAND=set_bash_prompt
